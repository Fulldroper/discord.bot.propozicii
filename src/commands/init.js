module.exports.info = {
  "name": "init",
  "dm_permission": false,
  "type": 1,
  "description": "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–æ—Ç–∞",
  "options": [
    {
      "name": "name",
      "description": "–í–∫–∞–∂—ñ—Ç—å –Ω–∞–∑–≤—É –∫–∞–Ω–∞–ª—É —è–∫–∏–π –±—É–¥–µ —Å—Ç–≤–æ—Ä–µ–Ω–æ –¥–ª—è –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π",
      "type": 3,
      "required": false
    },
    {
      "name": "channel",
      "description": "–í–∫–∞–∂—ñ—Ç—å –∫–∞–Ω–∞–ª —è–∫–∏–π –≤–∂–µ —Å—Ç–≤–æ—Ä–µ–Ω–æ –¥–ª—è –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π",
      "type": 7,
      "channel_types": [15],
      "required": false
    },
    {
      "name": "alert",
      "description": "–í–∫–∞–∑–∞—Ç–∏ —á–∏ –±—É–¥—É—Ç—å –∞–≤—Ç–æ—Ä–∏ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è? (–¢–∞–∫ –∞–±–æ –ù—ñ)",
      "type": 5,
      "required": false
    },
    {
      "name": "rate_limit",
      "description": "–∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å–µ–∫—É–Ω–¥, —è–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–æ–≤–∏–Ω–µ–Ω —á–µ–∫–∞—Ç–∏, –ø–µ—Ä—à –Ω—ñ–∂ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ —ñ–Ω—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (–¥–æ 21600)",
      "type": 4,
      "min_value": 0,
      "max_value": 21600000,
      "choices": [
        { "name": "15 —Å–µ–∫—É–Ω–¥", "value": 5000 },
        { "name": "30 —Å–µ–∫—É–Ω–¥", "value": 30000 },
        { "name": "1 —Ö–≤–∏–ª–∏–Ω–∞", "value": 60000 },
        { "name": "10 —Ö–≤–∏–ª–∏–Ω", "value": 600000 },
        { "name": "30 —Ö–≤–∏–ª–∏–Ω", "value": 1800000 },
        { "name": "1 –≥–æ–¥–∏–Ω–∞", "value": 3600000 },
        { "name": "6 –≥–æ–¥–∏–Ω", "value": 21600000 },
      ],
      "required": false
    },
    {
      "name": "mention",
      "description": "–í–∫–∞–∂—ñ—Ç—å —Ä–æ–ª—å —è–∫–∞ –±—É–¥–µ –∑–≥–∞–¥—É–≤–∞—Ç–∏—Å—è –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –Ω–æ–≤–æ—ó –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó (–Ω–µ –æ–±–æ–≤'—è–∑–∫–æ–≤–æ)",
      "type": 8,
      "required": false
    }
  ]
}

module.exports.run = async function(interaction, reply) {
  const {
    Administrator,
    SendMessages,
    ManageChannels,
    AddReactions,
    ViewChannel,
    ManageWebhooks,
  } = this.perm.Flags

  // interaction.app_permissions
  // interaction.member.permissions
  
  
  // Check if the bot has the "Administrator" permission in the server
  const mePerm = new this.perm(interaction.app_permissions)
  const _channel = interaction.data.options?.channel ? interaction.data.resolved.channels[interaction.data.options?.channel] : false
  const channelPerm = interaction.data.options?.channel ? new this.perm(_channel.permissions) : false
  
  // Check if the user who triggered the interaction has the "Administrator" permission
  // If not, send a reply indicating that the command is only available to administrators
  if (!new this.perm(interaction.member.permissions).has(Administrator)) return await reply.send({
    type: 4, data: {
      content: '–ö–æ–º–∞–Ω–¥–∞ –¥–æ–∑–≤–æ–ª–µ–Ω–∞ —Ç—ñ–ª—å–∫–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—ó, –≤–∏ –º–∞—î—Ç–µ –º–∞—Ç–∏ –ø—Ä–∞–≤–æ `ADMINISTRATOR`',
      flags: 64, // ephemeral flag
    }
  });
  
  if (!channelPerm && !interaction.data.options?.name) return await reply.send({
    type: 4, data: {
      content: '–ù–µ –≤–∫–∞–∑–∞–Ω–æ –Ω—ñ –æ–¥–∏–Ω –≤–∞—Ä—ñ–∞–Ω—Ç \n`name`- –Ω–∞–∑–≤–∞ –Ω–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª—É\n`channel` - —ñ—Å–Ω—É—é—á–∏–π —Ñ–æ—Ä—É–º\n\n**–î–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É**',
      flags: 64, // ephemeral flag
    }
  })

  let content = ''
  // If the bot doesn't have the "Administrator" permission, check for other necessary permissions
  mePerm.has(SendMessages)   || (content += '`SendMessages` ')
  mePerm.has(ManageChannels) || (content += '`ManageChannels` ')
  mePerm.has(AddReactions)   || (content += '`AddReactions` ')
  mePerm.has(ViewChannel)    || (content += '`ViewChannel` ')
  mePerm.has(ManageWebhooks) || (content += '`ManageWebhooks` ')
  
  if (content.length > 0) return await reply.send({
    type: 4, data: {
      content: '–î–ª—è —Ä–æ–±–æ—Ç–∏ –ø–æ—Ç—Ä—ñ–±–Ω–∏–π –¥–æ–∑–≤—ñ–ª –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–µ –ø—Ä–∞–≤–æ:\n' + content,
      flags: 64, // ephemeral flag
    }
  })
  

  // Setup channel
  let channel
  
  const premAll = new this.perm()
  const premMe = new this.perm("268436496")
  
  premAll.add(SendMessages)
  
  const chConfig = {
    "name": interaction.data.options?.name || _channel.name,
    "type": 15,
    "default_sort_order": 1,
    "default_forum_layout": 1,
    "default_auto_archive_duration": 10080,
    "available_tags": [
      { "name": "–ù–∞ —Ä–æ–∑–≥–ª—è–¥—ñ", "emoji_name":  "üëÄ" },
      { "name": "–ü—Ä–∏–π–Ω—è—Ç–æ", "emoji_name": "‚úÖ" },
      { "name": "–í—ñ–¥—Ö–∏–ª–µ–Ω–æ", "emoji_name": "‚ùå" },
    ],
    "permission_overwrites": [
      {
        "id": interaction.guild_id,
        "type": 0,
        "deny": premAll.bitfield.toString(),
      },
      {
        "id": this.me.id,
        "type": 1,
        "allow": premMe.bitfield.toString(),
      },
    ]
  }

  // Acknowledge the interaction with a "deferred" response
  reply.send({ 
    type: 5,
    data: {
      flags: 64, // ephemeral flag
    }
  });

  if (channelPerm) {
    // edit channel
    channel = await this.axios.patch(this.api.editChannel(interaction.data.options?.channel), chConfig, {
      headers: {
        Authorization: `Bot ${this.token}`,
        "Content-Type": "application/json",
      }
    }).then(r => r.data).catch(() => {}) || false
    if (!channel) return await this.axios.patch(this.api.replyOnDefer(interaction.application_id, interaction.token), {
      "content": "–ù–∞ –∫–∞–Ω–∞–ª—ñ –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ –∑–º—ñ–Ω—É, –≤–ø–µ–≤–Ω—ñ—Ç—å—Å—è —â–æ –Ω–∞—Å—Ç—É–ø–Ω—ñ –ø—Ä–∞–≤–∏–ª–∞ –¥–æ–∑–≤–æ–ª–µ–Ω—ñ: `–î–∏–≤–∏—Ç–∏—Å—è –∫–∞–Ω–∞–ª`, `–ö–µ—Ä—É–≤–∞—Ç–∏ –∫–∞–Ω–∞–ª–æ–º`, `–ö–µ—Ä—É–≤–∞–Ω–Ω—è –¥–æ–∑–≤–æ–ª–∞–º–∏`",
      "flags": 64, // ephemeral flag
    }, {
      headers: {
        Authorization: `Bot ${this.token}`,
        "Content-Type": "application/json",
      }
    });
  } else {
    // create channel
    channel = await this.axios.post(this.api.createChannel(interaction.guild_id), chConfig, {
      headers: {
        Authorization: `Bot ${this.token}`,
        "Content-Type": "application/json",
      }
    }).then(r => r.data).catch(console.log) || false
  }

  // saving tags ids
  const tags = {}
  const { available_tags, id: chid } = channel
  for (const tag of available_tags) {
    const lib = {
      '–ù–∞ —Ä–æ–∑–≥–ª—è–¥—ñ': 'wait',
      '–ü—Ä–∏–π–Ω—è—Ç–æ': 'accept',
      '–í—ñ–¥—Ö–∏–ª–µ–Ω–æ': 'deny',
    }
    
    tags[
      lib[tag.name]
    ] = tag.id
  }
  console.log(this.me);
  // rate_limit?.value && channel.channel.setRateLimitPerUser(rate_limit?.value || 0, "–∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å–µ–∫—É–Ω–¥, —è–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–æ–≤–∏–Ω–µ–Ω —á–µ–∫–∞—Ç–∏, –ø–µ—Ä—à –Ω—ñ–∂ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ —ñ–Ω—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è")
  // creating webhook
  const _webhook = await this.axios.post(this.api.createWebhook(chid), {
    "name": this.me.username,
  }, {
    headers: {
      Authorization: `Bot ${this.token}`,
      "Content-Type": "application/json",
    }
  }).then(r => r.data).catch(console.log) || false

  if (!_webhook) return await this.axios.patch(this.api.replyOnDefer(interaction.application_id, interaction.token), {
    "content": "–ù–∞ –∫–∞–Ω–∞–ª—ñ –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –≤–µ–±—Ö—É–∫–∏, –≤–ø–µ–≤–Ω—ñ—Ç—å—Å—è —â–æ –≤ –ø—Ä–∞–≤–∏–ª–∞—Ö –∫–∞–Ω–∞–ª—É –Ω–∞—è–≤–Ω–∏–π –¥–æ–∑–≤—ñ–ª `–ö–µ—Ä—É–≤–∞—Ç–∏ Webhook`",
    "flags": 64, // ephemeral flag
  }, {
    headers: {
      Authorization: `Bot ${this.token}`,
      "Content-Type": "application/json",
    }
  })
  
  // save the channel and alert settings to the database
  await this.db.set(`${this.collection}:${interaction.guild_id}`, {
    channel: channel.id,
    alert: interaction.data?.options?.alert || false,
    rate_limit: interaction.data?.options?.rate_limit || 0,
    mention: interaction.data?.options?.mention || 0,
    tags, webhook: this.api.sendWebhook(_webhook.id, _webhook.token)
  })

  // reply to the user with a success message and the settings that were applied
  this.axios.patch(this.api.replyOnDefer(interaction.application_id, interaction.token), {
    content: 
    `–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ\n\n- –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∫–∞–Ω–∞–ª <#${
      channel.id
    }> –¥–ª—è –ø—É–±–ª—ñ–∫–∞—Ü—ñ–π\n- —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∞–≤—Ç–æ—Ä–∞–º –ø—É–±–ª—ñ–∫–∞—Ü—ñ–π ${
      interaction.data?.options?.alert ? '**–£–≤—ñ–º–∫–Ω—É—Ç–æ**' : '**–í–∏–º–∫–Ω—É—Ç–æ**'
    }\n - –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å–µ–∫—É–Ω–¥, —è–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–æ–≤–∏–Ω–µ–Ω —á–µ–∫–∞—Ç–∏ ${
      interaction.data?.options?.rate_limit ? `**${interaction.data?.options?.rate_limit} c–µ–∫.**` : "**–Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ**"
    }\n - –∑–≥–∞–¥—É–≤–∞–Ω–Ω—è —Ä–æ–ª—ñ ${
      interaction.data?.options?.mention ? `<@&${interaction.data?.options?.mention}> (—è–∫—â–æ –≤–∏ –±–∞—á–∏—Ç–µ —Ç—ñ–ª—å–∫–∏ —Ü–∏—Ñ–∫–∏, –≤ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—ñ —Ä–æ–ª—ñ –¥–æ–∑–≤–æ–ª–∏—Ç–∏ –∑–≥–∞–¥—É–≤–∞–Ω–Ω—è)` : "**–Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ**"
    }`,
    "flags": 64, // ephemeral flag
  }, {
    headers: {
      Authorization: `Bot ${this.token}`,
      "Content-Type": "application/json",
    }
  }).catch(this.error)
  return
}

